sensor:
  - platform: command_line
    name: HA Installed Version
    command: "/srv/homeassistant/bin/hass --version"
    scan_interval: 86400

  - platform: command_line
    command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
    name: HA Current Version

  - platform: command_line
    name: "HA Uptime"
    command: echo "$(($(date +%s) - $(date -d "$(head -n1 /home/homeassistant/.homeassistant/home-assistant.log | cut -d' ' -f-2)" +%s)))"
    scan_interval: 720
    value_template: >-
                    {% set uptime = value | int %}
                    {% set seconds = uptime % 60 %}
                    {% set minutes = ((uptime % 3600) / 60) | int %}
                    {% set hours = ((uptime % 86400) / 3600) | int %}
                    {% set days = (uptime / 86400) | int %}
                    {%- if days > 0 -%}
                      {%- if days == 1 -%}
                        1 day
                      {%- else -%}
                        {{ days }} days
                      {%- endif -%}
                      {{ ', ' }}
                    {%- endif -%}
                    {{ '%02d' % hours }}:{{ '%02d' % minutes }}
  
  - platform: rest
    resource: http://ip.jsontest.com
    name: External IP
    scan_interval: 900
    value_template: '{{ value_json.ip }}'

  - platform: command_line
    name: CPU Temp
    command: "/bin/cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "ÂºC"
    value_template: '{{ value | multiply(0.001) | round(2) }}' 

  - platform: cpuspeed 
#    name: CPU

  - platform: systemmonitor
    resources:
      - type: disk_free
        arg: /home
      - type: memory_use_percent
      - type: memory_free
      - type: processor_use
      - type: since_last_boot

  - platform: template
    sensors:

      since_last_boot_templated:
        icon_template: mdi:clock
        friendly_name: 'Since last boot'
        value_template: >-
          {%- set slb = states.sensor.since_last_boot.state.split(' ') -%}
          {%- set count = slb | length -%}
          {%- set hms = slb[count - 1] -%}
          {%- set hms_trimmed = hms.split('.')[0] -%}
          {%- set hms_split = hms_trimmed.split(':') -%}
          {%- set hours = hms_split[0] | int -%}
          {%- set minutes = hms_split[1] | int -%}
          {%- set seconds = hms_split[2] | int -%}
          {%- if count == 3 -%}
            {{ slb[0] ~ ' ' ~ slb[1] ~ ' ' }}
          {%- endif -%}
          {%- if hours > 0 -%}
           {%- if hours == 1 -%}
             1 hour
           {%- else -%}
            {{ hours }} hours
          {%- endif -%}
          {%- endif -%}
          {%- if minutes > 0 -%}
          {%- if hours > 0 -%}
            {{ ', ' }}
          {%- endif -%}
          {%- if minutes == 1 -%}
            1 minute
          {%- else -%}
            {{ minutes }} minutes
          {%- endif -%}
          {%- endif -%}
          {%- if seconds > 0 -%}
          {%- if hours > 0 or minutes > 0 -%}
            {{ ', ' }}
          {%- endif -%}
          {%- if seconds == 1 -%}
            1 second
          {%- else -%}
            {{ seconds }} seconds
          {%- endif -%}
          {%- endif -%}

